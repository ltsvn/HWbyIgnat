{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","avatar","name","message","time","className","s","src","alt","angle","content","text","messageData","HW1","Affair","props","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","filter","setFilter","defaultAffairs","priority","filterAffairs","affairs","HW2","useState","setAffairs","deleteAffair","SuperButton","red","restProps","finalClassName","default","Greeting","setNameCallback","addUser","error","totalUsers","value","onChange","inputClass","placeholder","counting","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","trim","HW3","setUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","errorInput","SuperCheckbox","onChangeChecked","children","checkbox","HW4","setText","showAlert","alert","checked","setChecked","column","testSpanError","blue","disabled","Header","Routes","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.6ccd224c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__8WR15\",\"avatar\":\"Message_avatar__3FT3j\",\"angle\":\"Message_angle__1T-oN\",\"content\":\"Message_content__Ltxgc\",\"name\":\"Message_name__Tzmp0\",\"text\":\"Message_text__2fXBO\",\"time\":\"Message_time__HOFTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__uGflL\",\"error\":\"Greeting_error__1uvQ8\",\"red\":\"Greeting_red__ujJSS\",\"counting\":\"Greeting_counting__1z4EF\",\"inputClass\":\"Greeting_inputClass__14GLD\",\"button\":\"Greeting_button__24QRF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\",\"testSpanError\":\"HW4_testSpanError___Mj8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3XH9u\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","import React from 'react'\nimport s from './Message.module.css'\n\nexport type messagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message({avatar, name, message, time}: messagePropsType) {\n    return (\n        <div className={s.message}>\n            <img className={s.avatar} src={avatar} alt={'Avatar'}/>\n            <div className={s.angle}/>\n            <div className={s.content}>\n                <div className={s.name}>\n                    {name}\n                </div>\n                <div className={s.text}>\n                    {message}\n                </div>\n                <div className={s.time}>\n                    {time}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Artem',\n    message: 'npm start нажимал?',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            {/*homeworks 1*/}\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType\n    deleteAffairCallback: (affairId: number) => void\n}\n\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () =>\n         props.deleteAffairCallback(props.affair._id)\n\n    return (\n        <div>\n            {props.affair.name}\n\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairPriorityType, AffairType, FilterType} from './HW2'\n\ntype AffairsPropsType = { // need to fix any\n    data: AffairType[]\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = (filter: FilterType) => {\n        props.setFilter(filter)\n    }\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={() => {setAll(\"all\")}}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\nimport Affair from \"./Affair\";\nimport affair from \"./Affair\";\n\n// types\nexport type AffairPriorityType = 'high' | 'middle' | 'low'\nexport type AffairType = { _id: number; name: string; priority: AffairPriorityType } // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairType[] = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\n    if (filter === 'high') {return affairs.filter(affair => affair.priority === 'high')}\n    else if (filter === 'middle') {return affairs.filter(affair => affair.priority === 'middle')}\n    else if (filter === 'low') {return affairs.filter(affair => affair.priority === 'low')}\n    else return affairs // need to fix\n}\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\n    return affairs.filter(affair => affair._id !== _id)// need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    // const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n    const changeFilterCallback = (filter: FilterType) => setFilter(filter) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filterAffairs(affairs, filter)}\n                setFilter={changeFilterCallback}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>)=>void // need to fix any\n    addUser: ()=>void // need to fix any\n    error: string // need to fix any\n    totalUsers: any // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error: ''// need to fix with (?:)\n\n    return (\n        <div>\n            <input value={name} onChange={setNameCallback} className={s.inputClass} placeholder={'name and surname'}/>\n\n            {/*<button className={s.button} onClick={addUser}>add</button>*/}\n            <SuperButton className={s.default} onClick={addUser}>\n                add\n            </SuperButton>\n            <span className={s.counting}>{totalUsers}</span>\n            <span className={s.red}>{error}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any\n    addUserCallback: (name: string)=>void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setName(e.currentTarget.value) // need to fix\n    }\n    const addUser = () => {\n        if(name.trim() !== ''){\n        addUserCallback(name.trim())\n        setName('')} else {\n            setError('You can not add empty task!')\n        }\n    }\n\n    const totalUsers = users.length  // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string  // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n            setUsers([{_id: v1(), name: name}, ...users])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className ? className : ''}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\n\nfunction Header() {\n    return (\n        <div>\n            // add NavLinks\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            {/*<Switch>*/}\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            {/*<Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\n\n            {/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            {/*<Route render={() => <Error404/>}/>*/}\n\n            {/*</Switch>*/}\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            {/*<HashRouter>*/}\n\n            <Header/>\n\n            <Routes/>\n\n            {/*</HashRouter>*/}\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}